{
  "_args": [
    [
      {
        "raw": "is-resolvable@https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
        "scope": null,
        "escapedName": "is-resolvable",
        "name": "is-resolvable",
        "rawSpec": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
        "spec": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
        "type": "remote"
      },
      "/var/tmp/NTL-ISS-Food-Intake-Tracker/Backend Services/issfit-api/node_modules/nsp"
    ]
  ],
  "_from": "is-resolvable@https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
  "_id": "is-resolvable@1.0.0",
  "_inCache": true,
  "_location": "/nsp/is-resolvable",
  "_phantomChildren": {},
  "_requested": {
    "raw": "is-resolvable@https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
    "scope": null,
    "escapedName": "is-resolvable",
    "name": "is-resolvable",
    "rawSpec": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
    "spec": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/nsp",
    "/nsp/eslint",
    "/nsp/lab/eslint"
  ],
  "_resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
  "_shasum": "8df57c61ea2e3c501408d100fb013cf8d6e0cc62",
  "_shrinkwrap": null,
  "_spec": "is-resolvable@https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
  "_where": "/var/tmp/NTL-ISS-Food-Intake-Tracker/Backend Services/issfit-api/node_modules/nsp",
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "bugs": {
    "url": "https://github.com/shinnn/is-resolvable/issues"
  },
  "dependencies": {
    "tryit": "^1.0.1"
  },
  "description": "Check if a module ID is resolvable with require()",
  "devDependencies": {
    "@shinnn/eslintrc-node": "^1.0.2",
    "eslint": "^0.24.0",
    "istanbul": "^0.3.17",
    "tape": "^4.0.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/shinnn/is-resolvable#readme",
  "keywords": [
    "read",
    "file",
    "font",
    "glyph",
    "code-point",
    "unicode",
    "parse",
    "cmap",
    "table",
    "data",
    "metadata"
  ],
  "license": "MIT",
  "name": "is-resolvable",
  "optionalDependencies": {},
  "readme": "# is-resolvable\n\n[![NPM version](https://img.shields.io/npm/v/is-resolvable.svg)](https://www.npmjs.com/package/is-resolvable)\n[![Build Status](https://travis-ci.org/shinnn/is-resolvable.svg?branch=master)](https://travis-ci.org/shinnn/is-resolvable)\n[![Build status](https://ci.appveyor.com/api/projects/status/ww1cdpignehlasbs?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/is-resolvable)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/is-resolvable.svg)](https://coveralls.io/r/shinnn/is-resolvable)\n[![Dependency Status](https://img.shields.io/david/shinnn/is-resolvable.svg?label=deps)](https://david-dm.org/shinnn/is-resolvable)\n[![devDependency Status](https://img.shields.io/david/dev/shinnn/is-resolvable.svg?label=devDeps)](https://david-dm.org/shinnn/is-resolvable#info=devDependencies)\n\nA [Node](https://nodejs.org/) module to check if a module ID is resolvable with [`require()`](https://nodejs.org/api/globals.html#globals_require)\n\n```javascript\nconst isResolvable = require('is-resolvable');\n\nisResolvable('fs'); //=> true\nisResolvable('path'); //=> true\n\n// When `./index.js` exists\nisResolvable('./index.js') //=> true\nisResolvable('./index') //=> true\nisResolvable('.') //=> true\n```\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```\nnpm install is-resolvable\n```\n\n## API\n\n```javascript\nconst isResolvable = require('is-resolvable');\n```\n\n### isResolvable(*moduleId*)\n\n*moduleId*: `String` (module ID)  \nReturn: `Boolean`\n\nIt returns `true` if `require()` can load a file form a given module ID, otherwise `false`.\n\n```javascript\nconst isResolvable = require('is-resolvable');\n\n// When `./foo.json` exists\nisResolvable('./foo.json'); //=> true\nisResolvable('./foo'); //=> true\n\nisResolvable('./foo.js'); //=> false\n\n\n// When `lodash` module is installed but `underscore` isn't\nisResolvable('lodash'); //=> true\nisResolvable('underscore'); //=> false\n\n// When `readable-stream` module is installed\nisResolvable('readable-stream/readable'); //=> true\nisResolvable('readable-stream/writable'); //=> true\n```\n\n## License\n\nCopyright (c) 2014 - 2015 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shinnn/is-resolvable.git"
  },
  "scripts": {
    "coverage": "istanbul cover test.js",
    "pretest": "eslint --config node_modules/@shinnn/eslintrc-node/rc.json index.js test.js",
    "test": "node test.js"
  },
  "version": "1.0.0"
}
